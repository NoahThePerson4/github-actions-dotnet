#This is our continuous integration (CI). It creates an artifact folder with our code compiled.
name: CI 

env:
  AZURE_WEBAPP_NAME: your-app-name    # set this to the name of your Azure Web App
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '8.0'                 # set this to the .NET Core version to use

on:
  push:
    branches: [ "main" ]

# More CD stuff
#permissions:
#  id-token: write
#  contents: read

jobs:
  build:
    name: CI
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0

      - name: Run tests with dotnet
        run: dotnet test --configuration Release

      - name: dotnet publish
        run: dotnet publish src/GitHubActionsDotNet.Api/GitHubActionsDotNet.Api.csproj --configuration Release -o artifacts

      - uses: actions/upload-artifact@v4
        with:
          name: dometrain-artifact
          path: artifacts/
# this is our CD workflow I don't have azure so this will be commented out.
  # deploy_dev:
  #  name: Deploy Dev
  #  needs: build
  #  uses: ./.github/workflows/step-deploy.yml
  #  with:
  #    env: dev
  #  secrets: inherit

#deploy Prod.  
  # deploy_prod:
  #  name: Deploy Prod
  #  runs-on: ubuntu-latest
  #  needs: deploy_dev
#This enviroment allows us to not have to change the names of our secrets.
#however we must make environment secrets instead of repository secrets now.
  #  environment: prod
  #  steps: 
  #    - uses: actions/download-artifact@v4
  #      with:
  #        name: dometrain-artifact
  #        path: artifacts/

  #    - name: 'Run Azure webapp deploy action using publish profile credentials'
  #      uses: azure/webapps-deploy@v2
  #      with: 
  #        app-name: app-dometrain-noah-prod
  #        package: artifacts/
  #    - name: Azure login
  #      uses: azure/login@v2
  #      with:
#we need a completely new managed user for production
        #  client-id: ${{ secrets.AZURE_CLIENT_ID }}
        #  tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        #  subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}